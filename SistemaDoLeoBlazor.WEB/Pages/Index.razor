@page "/"
@inject IOperadorLocalService service

<div class="container">
    <img src="logo.jpeg" alt="Minha Imagem" class="centered-image" />

    <div class="overlay-text">
        <h1>Sistema do Leo 3.0</h1>
    </div>
</div>

<style>
    .container {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 80vh; /* Isso garante que a imagem seja centralizada verticalmente na tela inteira */
    }

    .centered-image {
        max-width: 80%;
        max-height: 80vh;
        z-index: 1; /* Certifique-se de que a imagem fique em frente ao texto */
    }

    .overlay-text {
        position: absolute;
        top: 12%; /* Posiciona o texto no centro vertical da imagem */
        left: 56%; /* Posiciona o texto no centro horizontal da imagem */
        transform: translate(-50%, -50%); /* Centraliza o texto corretamente */
        text-align: center;
        color: white; /* Define a cor do texto */
        z-index: 2; /* Certifique-se de que o texto fique em frente à imagem */
    }
</style>
@code {
    [Inject] private ToasterService? _toasterService { get; set; }
    [Inject] private NavigationManager? NavigationManager { get; set; }
    private ToasterService toasterService => _toasterService!;
    private OperadorDTO operadorLogado { get; set; }
    private IEnumerable<OperadorTelaDTO> telas {get;set;}

    private void AddToast(string titulo, string mensagem)
    => toasterService.AddToast(Toast.NewToast(titulo, mensagem, MessageColour.Danger, 10));

    protected override async Task OnInitializedAsync()
    {
        await getOperadorSession();
        await validarAcesso();
    }

    private async Task getOperadorSession()
    {
        try
        {
            operadorLogado = await service.GetSessaoOperador();
        }
        catch (Exception ex)
        {
            _toasterService.AddToast(Toast.NewToast("ERRO", $"Ocorreu um erro: {ex.Message}", MessageColour.Danger, 8));
        }
    }

    private async Task validarAcesso()
    {
        if (operadorLogado == null)
        {
            NavigationManager.NavigateTo("/login"); // ALTERAR PARA TELA DE LOGIN
        }
    }
}
